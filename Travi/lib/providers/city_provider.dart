import 'dart:typed_data';
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import './lodging_provider.dart';
import './transportation_provider.dart';
import './restaurant_provider.dart';
import './activity_provider.dart';

class City extends ChangeNotifier {
  String id;
  String city;
  double latitude;
  double longitude;
  List<Uint8List> googleImages;
  String cityImageUrl;
  List<Lodging> lodgings;
  List<Activity> activities;
  List<Transportation> transportations;
  List<Restaurant> restaurants;

  City({
    this.id,
    this.city,
    this.latitude,
    this.longitude,
    this.googleImages,
    this.cityImageUrl,
    this.lodgings,
    this.activities,
    this.transportations,
    this.restaurants,
  });

  List<City> _cities = [];

  //getter function to return list of trips
  List<City> get cities {
    return [..._cities];
  }

  //Function to add destination to Firebase Firestore
  Future<void> addCity(
    String userId,
    String tripId,
    String countryId,
    City cityValues,
  ) async {
    try {
      //Create a TripProvider object with newly aquired autogenerated id.
      await FirebaseFirestore.instance
          .collection('users')
          .doc('$userId')
          .collection('trips')
          .doc('$tripId')
          .collection('countries')
          .doc('$countryId')
          .collection('cities')
          .add({
        'city': cityValues.city,
        'cityImageUrl': cityValues.cityImageUrl,
        'latitude': cityValues.latitude,
        'longitude': cityValues.longitude,
      }).then((docRef) async {
        cityValues.id = docRef.id;
        try {
          await FirebaseFirestore.instance
              .collection('users')
              .doc('$userId')
              .collection('trips')
              .doc('$tripId')
              .collection('countries')
              .doc('$countryId')
              .collection('cities')
              .doc(docRef.id)
              .update({
            'id': docRef.id,
          }).then(
            (value) {
              print('Updated city id');
            },
          );
        } catch (error) {
          throw error;
        }
      });
      //This will be used to add to list of trips in the state
      final newCity = City(
        id: null, //ADD CODE TO GET ID
        city: cityValues.city,
        latitude: cityValues.latitude,
        longitude: cityValues.longitude,
      );
      _cities.add(newCity);
      notifyListeners();
    } catch (error) {
      throw error;
    }
  }

  Future<void> setCityList(List<City> cityList) async {
    _cities = cityList;
  }

  //Get all cities for a country in a trip
  Future<void> fetchAndSetCities(
    String userId,
    String tripId,
    String countryId,
  ) async {
    bool collection = false;
    List<City> cityList = [];
    try {
      await FirebaseFirestore.instance
          .collection('users')
          .doc('$userId')
          .collection('trips')
          .doc('$tripId')
          .collection('countries')
          .doc('$countryId')
          .collection('cities')
          .get()
          .then(
            (city) => {
              if (city.docs.length > 0)
                {
                  collection = true,
                  city.docs.asMap().forEach(
                    (index, cityData) {
                      cityList.add(
                        City(
                          id: city.docs[index].id,
                          city: cityData.data()['city'],
                          latitude: cityData.data()['latitude'],
                          longitude: cityData.data()['longitude'],
                          cityImageUrl: cityData.data()['cityImageUrl'],
                        ),
                      );
                    },
                  ),
                }
              else
                {
                  collection = false,
                }
            },
          )
          .then(
            (value) => print('Fetched cities'),
          );
    } catch (error) {
      throw error;
    }
    if (collection) {
      await setCityList(cityList);
    }
    notifyListeners();
  }

  //Function to update desetination in Firebase Firestore
  Future<void> updateCity(
    String userId,
    String tripId,
    String countryId,
    String cityId,
    City city,
  ) async {
    try {
      await FirebaseFirestore.instance
          .collection('users')
          .doc('$userId')
          .collection('trips')
          .doc('$tripId')
          .collection('countries')
          .doc('$countryId')
          .collection('cities')
          .doc('$cityId')
          .update({
        'city': city.city,
        'latitude': city.latitude,
        'longitude': city.longitude,
        'cityImageUrl': city.cityImageUrl,
      }).then(
        (value) => print('update ciy'),
      );
    } catch (error) {
      throw error;
    }
    notifyListeners();
  }

  //Function to remove a country from the list
  Future<void> removeCity(int index) async {
    try {
      if (index > _cities.length - 1 || index < 0) {
        return;
      }
      _cities.removeAt(index);
      notifyListeners();
    } catch (error) {
      throw error;
    }
  }

  //Function to remove all countries from list.
  Future<void> removeAllCities() async {
    try {
      if (_cities.length > 0) {
        _cities = [];
        notifyListeners();
      }
      return;
    } catch (error) {
      throw error;
    }
  }
}
